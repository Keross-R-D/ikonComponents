'use client';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Icon } from "../icon";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "../../shadcn/tooltip";
import { Button } from "../../shadcn/button";
export function Widgets({ widgetData }) {
    const firstRowWidgets = widgetData.slice(0, 4);
    const secondRowWidgets = widgetData.slice(4);
    return (_jsxs("div", { className: "flex flex-col gap-2", children: [_jsx("div", { className: "flex flex-col md:flex-row gap-2", children: firstRowWidgets.map((widget) => (_jsxs("div", { className: "flex flex-1 flex-row justify-between border rounded-md p-2 border-l-4 border-l-primary", children: [_jsxs("div", { className: "flex flex-col", children: [_jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { className: "cursor-default select-text", children: _jsx("p", { className: "font-medium max-w-[240px] truncate", children: widget.widgetText }) }), _jsx(TooltipContent, { children: _jsx("p", { children: widget.widgetText }) })] }) }), _jsx("div", { children: widget.onButtonClickfunc ?
                                        _jsx(Button, { className: "px-0", variant: "link", onClick: () => { var _a; return (_a = widget.onButtonClickfunc) === null || _a === void 0 ? void 0 : _a.call(widget, { id: widget.id }); }, children: widget.widgetNumber }) :
                                        _jsx("p", { className: "inline-flex items-center justify-center px-0 py-2 text-sm font-medium border border-transparent rounded-md", children: widget.widgetNumber }) })] }), _jsx("div", { className: "flex justify-end items-center", children: widget.iconName && _jsx(Icon, { name: widget.iconName }) })] }, widget.id))) }), secondRowWidgets.length > 0 && (_jsx("div", { className: "flex flex-col md:flex-row gap-2", children: secondRowWidgets.map((widget) => (_jsxs("div", { className: "flex flex-1 flex-row justify-between border rounded-md p-2 border-l-4 border-l-primary", children: [_jsxs("div", { className: "flex flex-col", children: [_jsx(TooltipProvider, { children: _jsxs(Tooltip, { children: [_jsx(TooltipTrigger, { className: "cursor-default select-text", children: _jsx("p", { className: "font-medium max-w-[240px] truncate", children: widget.widgetText }) }), _jsx(TooltipContent, { children: _jsx("p", { children: widget.widgetText }) })] }) }), _jsx("div", { children: widget.onButtonClickfunc ?
                                        _jsx(Button, { className: "px-0", variant: "link", onClick: () => { var _a; return (_a = widget.onButtonClickfunc) === null || _a === void 0 ? void 0 : _a.call(widget, { id: widget.id }); }, children: widget.widgetNumber }) :
                                        _jsx("p", { className: "inline-flex items-center justify-center px-0 py-2 text-sm font-medium border border-transparent rounded-md", children: widget.widgetNumber }) })] }), _jsx("div", { className: "flex justify-end items-center", children: widget.iconName && _jsx(Icon, { name: widget.iconName }) })] }, widget.id))) }))] }));
}
